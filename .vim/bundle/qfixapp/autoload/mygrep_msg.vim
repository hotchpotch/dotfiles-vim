if v:version < 700 || &cp
  finish
endif
scriptencoding utf-8
function! mygrep_msg#help()
endfunction

let g:QFixGrepHelpList = [
 \ '-------------------------------------',
 \ '= grepコマンド (グローバル)',
 \ '実際のコマンドは g,f のようにキーマップリーダーが付加されます',
 \ '',
 \ '  ,f       : 現編集バッファと同じディレクトリで固定文字列検索',
 \ '  ,e       : 現編集バッファと同じディレクトリでgrep',
 \ '  ,v       : 現編集バッファと同じディレクトリでvimgrep',
 \ '  ,b       : 現在開いている全てのバッファを対象にgrep',
 \ '',
 \ '  再帰検索',
 \ '  ,rf      : 現編集バッファと同じディレクトリで固定文字列検索',
 \ '  ,re      : 現編集バッファと同じディレクトリでgrep',
 \ '  ,rv      : 現編集バッファと同じディレクトリでvimgrep',
 \ '',
 \ ',F のように大文字のコマンドでは前回結果を削除せずに検索結果が追加されます。',
 \ '',
 \ ',f 等のコマンドの検索基準ディレクトリとファイルエンコーディングを指定可能です。',
 \ '  ,rM      : 検索ディレクトリ基点を（カレントディレクトリ/ファイル）でトグル',
 \ '  ,rD      : 再帰検索オプションをトグル',
 \ '  ,rS      : 検索ファイルのエンコーディングを設定',
 \ '',
 \ '  コマンドライン',
 \ '  :Grep 検索文字列 *.txt',
 \ '  (空白を含む検索文字は "空白 を含む検索"のように""を使用する)',
 \ '',
 \ '  Grep   正規表現検索',
 \ '  FGrep  固定文字列検索',
 \ '  RGrep  再帰検索',
 \ '  RFGrep 再帰検索(固定文字列)',
 \ '  BGrep  バッファ対象のvimgrep',
 \ '',
 \ '-------------------------------------',
 \ '= Quickfixウィンドウでの操作',
 \ '',
 \ '  <C-w>,   : Quickfixウィンドウのオープン/クローズ',
 \ '  <C-w>.   : Quickfixウィンドウへ移動',
 \ '   q       : Quickfixウィンドウのクローズ',
 \ '',
 \ '  <CR>     : ファイルを開く',
 \ '  <S-CR>   : <CR> とは異なる方法でファイルを開く',
 \ '',
 \ '   s       : 指定文字列を含む行に絞り込み',
 \ '   r       : 指定文字列を含まない行に絞り込み',
 \ '   u       : アンドゥ',
 \ '   U       : 全てアンドゥ',
 \ '   S       : ソート切替',
 \ '',
 \ '   J       : ジャンプ後にQuickfixウィンドウを閉じる/閉じない',
 \ '   i       : プレビュー表示ON/OFF',
 \ '   I       : ファイルタイプのハイライト表示ON/OFF',
 \ '  <C-h>    : ハイスピードプレビューON/OFF',
 \ '',
 \ '   A       : Quickfixウィンドウを保存',
 \ '   O       : Quickfixウィンドウを読み込む',
 \ '  ,w       : Quickfixウィンドウを保存',
 \ '             キーマップリーダーが g の場合、実際のコマンドは g,w',
 \ '  ,k       : Quickfixウィンドウを読み込む (グローバルコマンド)',
 \ '             キーマップリーダーが g の場合、実際のコマンドは g,k',
 \ '',
 \ '(Quickfixウィンドウの編集)',
 \ '   dd      : 削除',
 \ '   d       : 削除(ビジュアルモード)',
 \ '   p       : 貼り付け',
 \ '   P       : 貼り付け(前行)',
 \ '']
let g:QFixHowmMenuList = [
 \ '= >>> %menu%',
 \ '上のファイル名↑にカーソルを合わせて<CR>で、ファイル編集可能です。',
 \ '保存時に時刻を自動で挿入されたくない場合は g,w で保存して下さい。',
 \ '',
 \ '-------------------------------------',
 \ '%"q"[終了] %"i"[プレビュー] %","[menu更新(,)] %"r,"[Menu最新(r,)] %"I"[Help(H)]',
 \ '-------------------------------------',
 \ '%"."[新規(c)] %"u"[QMem(u)] %" "[日記(<Space>)] %"A"[日記一覧(A)]',
 \ '%"m"[MRU(m)]  %"o"[最近(l)] %"O"[最近(L)] %"a"[一覧(a)] %"ra"[高速一覧(ra)]',
 \ '%"s"[固定(s)] %"S"[正規(g)] %"R"[ファイル一覧(rA)] %"rr"[ランダム(rr)]',
 \ '%"<Tab>"[予定(y)] %"t"[todo(t)] %"ry"[予定最新(ry)]  %"rt"[Todo最新(rt)]',
 \ 'リビルド (%"rk"[キーワード(rk)] %"rR"[ランダム(rR)]) %"rN"[リネーム(rN)]',
 \ '-------------------------------------',
 \ 'ボタンはカーソルを合わせて<CR>かダブルクリック、ショートカットキーで実行します。',
 \ 'menu更新とmenu最新の差はキャッシュを無効化して強制再検索するかどうかです。',
 \ 'また18<CR> なら18行目に移動してから<CR>を押したのと同じ動作を行います。',
 \ 'この時18行目が howm:// で始まっているなら対応するファイルを開く事になります。',
 \ '',
 \ '-------------------------------------',
 \ '[予定・TODO]',
 \ '%reminder',
 \ '-------------------------------------',
 \ '最近のメモ',
 \ '%recent',
 \ '-------------------------------------',
 \ 'ランダムセレクト',
 \ '%random',
 \ '-------------------------------------',
 \ '',
 \ '* menuのオプション指定',
 \ '  "メニュー画面のプレビュー("i"でOn/Off)',
 \ '  let QFixHowm_MenuPreview = 1',
 \ '  "メニュー画面で表示する最近のメモの数',
 \ '  let QFixHowm_MenuRecent = 5',
 \ '',
 \ 'メニュー画面ファイルは何処にあってもリンク作成の対象になるので、Wikiスタイルリンクなどを定義しておくと便利かもしれません。',
 \ 'その他は普通のhowmファイルと同様の機能が使用可能です。',
 \ '']
